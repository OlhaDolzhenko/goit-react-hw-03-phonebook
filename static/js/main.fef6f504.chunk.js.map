{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","reset","handleSubmit","preventDefault","newContact","id","shortid","generate","props","onSubmit","className","styles","form","this","label","type","pattern","title","input","onChange","required","btn","Component","ContactsListItem","contact","onDelete","listItem","onClick","ContactsList","contacts","list","map","Filter","container","App","filter","addContact","find","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fef6f504.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  reset = () => {\n    this.setState({ name: '' });\n    this.setState({ number: '' });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(newContact);\n\n    this.reset();\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            className={styles.input}\n            value={this.state.name}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            className={styles.input}\n            value={this.state.number}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './ContactsListItem.module.css';\n\nconst ContactsListItem = ({ contact, onDelete }) => {\n  return (\n    <li className={styles.listItem} key={contact.id}>\n      {contact.name}:<span className={styles.number}>{contact.number}</span>\n      <button\n        className={styles.btn}\n        onClick={() => onDelete(contact.id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDelete: PropTypes.func,\n};\n\nexport default ContactsListItem;\n","import PropTypes from 'prop-types';\nimport ContactsListItem from '../ContactsListItem';\nimport styles from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => {\n        return (\n          <ContactsListItem\n            key={contact.id}\n            contact={contact}\n            onDelete={onDelete}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDelete: PropTypes.func,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={styles.container}>\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport default Filter;\n","import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = newContact => {\n    if (this.state.contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      return null;\n    }\n\n    this.setState(({ contacts }) => ({ contacts: [newContact, ...contacts] }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactsListItem_listItem__guPkq\",\"number\":\"ContactsListItem_number__L-ZUW\",\"btn\":\"ContactsListItem_btn__3viZl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}